/*
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU LESSER GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU LESSER GENERAL PUBLIC LICENSE
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

//package DecodeSTORM;

import ij.io.OpenDialog;
import java.io.File;
import javax.swing.JFileChooser;

public class DecodeSTORM_Configurator extends javax.swing.JFrame {

    /**
     * Creates new form DecodeSTORMConfigurator
     */
    
    FilteringPara FiltPara;
    volatile public String ResultsFilePath = "D:\\";
    public String ConvertFilePath = null;
    public int FileFormatSelect = 0;
    public String DataPathChan1 = null;
    public String DataPathChan2 = null;
    //Rendering
    public int RenderRoiEnable = 0;
    public int RenderArtifactCorrRoiEnable = 0;
    public int RenderCh1Enable = 0;
    public int RenderCh2Enable = 0;
    public int RenderPixSize = 10;
    public int RenderSave = 0;
    public float RawImPixSizeForRender = 100;
    //DriftCorr Enable
    public int DriftCorrEnable = 0;
    public int DriftCorrCh1Enable = 0;
    public int DriftCorrCh2Enable = 0;
    public int DriftCorrSave = 0;
    public int DriftCorrGPU = 0;
    public int DriftCorrGroupFrameNum = 500;
    public float RawImPixSize = 100;
    //Filtering Enable
    public int DenFiltEnable = 0;
    public int DupFiltEnable = 0;
    public int UnpFilterEnable = 0;
    public int MergeEnable = 0;
    public int FilterChan1Enable = 0;
    public int FilterChan2Enable = 0;
    public int FilteringSave = 0;
    //SpatialStatictics Enable
    public int RdfEnable = 0;
    public int RipleyHEnable = 0;
    public int LinkPostStatisticEnable = 0;
    public int SpatialStatiticSave = 0;
    public int ChanSele_1 = 0;
    public int ChanSele_2 = 0;
    public float MaxAnaDis = 200;
    //Segmentation and Cluster Enable
    public int DBSCANEnable = 0;
    public int EpsEnable = 0;
    public int VoronoiEnable = 0;
    public int ClusterChan1Enable = 0;
    public int ClusterChan2Enable = 0;
    public int LinkPostClusterEnable = 0;
    public int SegmentationClusterSave = 0;
    public int MinPts = 10;
    public float Eps = 50;
    //Colocalization Enable
    public int DocEnable = 0;
    public int LinkPostColocEnable = 0;
    public int  ColocalizationSave = 0;
    public float Rmax = 500;
    public float Step = 10;
    public float ColoThres = 0.4f;
    public DecodeSTORM_ pDecodeSTORM;

    public String lastpath = "D:\\";
    public DecodeSTORM_Configurator() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DecodeSTORM");

        FiltPara = new FilteringPara();

    }

    public DecodeSTORM_Configurator(DecodeSTORM_ fa_DecodeSTORM) {
        initComponents();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DecodeSTORM");

        pDecodeSTORM = fa_DecodeSTORM;

        FiltPara = new FilteringPara();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jComboBox_SelFileFormat = new javax.swing.JComboBox();
        jTextField_ConvertFilePath = new javax.swing.JTextField();
        jButton_LoadConvertFile = new javax.swing.JButton();
        jButton_Convert = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jButton_LoadDataChan2 = new javax.swing.JButton();
        jButton_LoadDataChan1 = new javax.swing.JButton();
        jButton_LoadImage = new javax.swing.JButton();
        jButton_SelectROI = new javax.swing.JButton();
        jTextField_LocDataPathChan2 = new javax.swing.JTextField();
        jTextField_LocDataPathChan1 = new javax.swing.JTextField();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox_DriftCorrection = new javax.swing.JCheckBox();
        jLabel22 = new javax.swing.JLabel();
        jTextField_DriftCorrGroupFrameNum = new javax.swing.JTextField();
        jCheckBox_DriftCorrCh1 = new javax.swing.JCheckBox();
        jCheckBox_DriftCorrCh2 = new javax.swing.JCheckBox();
        jCheckBox_DriftSave = new javax.swing.JCheckBox();
        jButton_DriftCorr = new javax.swing.JButton();
        jCheckBox_DriftCorrGPU = new javax.swing.JCheckBox();
        jLabel31 = new javax.swing.JLabel();
        jTextField_RawImPixSize = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jCheckBox_UnpFilt = new javax.swing.JCheckBox();
        jLabel34 = new javax.swing.JLabel();
        jTextField_UnpThre = new javax.swing.JTextField();
        jCheckBox_DenFilt = new javax.swing.JCheckBox();
        jLabel27 = new javax.swing.JLabel();
        jTextField_StDev = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextField_DistThre = new javax.swing.JTextField();
        jCheckBox_RemoveDup = new javax.swing.JCheckBox();
        jLabel33 = new javax.swing.JLabel();
        jTextField_FilterRadius = new javax.swing.JTextField();
        jCheckBox_Merge = new javax.swing.JCheckBox();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jTextField_MaxFrameInterval = new javax.swing.JTextField();
        jTextField_TwoEventsMaxDis = new javax.swing.JTextField();
        jCheckBox_FilterChannel1 = new javax.swing.JCheckBox();
        jCheckBox_FilterChannel2 = new javax.swing.JCheckBox();
        jCheckBox_FilteringSave = new javax.swing.JCheckBox();
        jButton_Filtering = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox_RDF = new javax.swing.JCheckBox();
        jCheckBox_RipleyH = new javax.swing.JCheckBox();
        jLabel37 = new javax.swing.JLabel();
        jTextField_MaxAnaDis = new javax.swing.JTextField();
        jComboBox_SelChan1 = new javax.swing.JComboBox();
        jComboBox_SelChan2 = new javax.swing.JComboBox();
        jButton_SpatialStatistics = new javax.swing.JButton();
        jCheckBox_LinkPostStatistic = new javax.swing.JCheckBox();
        jCheckBox_SpatialStatiticSave = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox_DBSCAN = new javax.swing.JCheckBox();
        jLabel38 = new javax.swing.JLabel();
        jTextField_MinPts = new javax.swing.JTextField();
        jTextField_Eps = new javax.swing.JTextField();
        jCheckBox_Voronoi = new javax.swing.JCheckBox();
        jCheckBox_ClusterChannel1 = new javax.swing.JCheckBox();
        jCheckBox_ClusterChannel2 = new javax.swing.JCheckBox();
        jButton_Cluster = new javax.swing.JButton();
        jCheckBox_LinkPostCluster = new javax.swing.JCheckBox();
        jCheckBox_SegmentationClusterSave = new javax.swing.JCheckBox();
        jRadioButton_Eps = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox_ClusDoc = new javax.swing.JCheckBox();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jTextField_RMax = new javax.swing.JTextField();
        jTextField_Step = new javax.swing.JTextField();
        jTextField_ColocThre = new javax.swing.JTextField();
        jButton_CalcDOC = new javax.swing.JButton();
        jCheckBox_LinkPostColoc = new javax.swing.JCheckBox();
        jCheckBox_ColocalizationSave = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jButton_Rendering = new javax.swing.JButton();
        jCheckBox_RenderCh2 = new javax.swing.JCheckBox();
        jCheckBox_RenderCh1 = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        jTextField_RenderPixSize = new javax.swing.JTextField();
        jCheckBox_RenderSave = new javax.swing.JCheckBox();
        jCheckBox_ROI = new javax.swing.JCheckBox();
        jCheckBox_ArtifactCorrROI = new javax.swing.JCheckBox();
        jLabel30 = new javax.swing.JLabel();
        jTextField_RawImPixSizeForRender = new javax.swing.JTextField();
        jTextField_ResultPath = new javax.swing.JTextField();
        jButton_LoadResultPath = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(129, 124));

        jLabel25.setText("InPut File Format: ");

        jComboBox_SelFileFormat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "QuickPALM", "RapidSTORM", "ThunderSTORM", "QC-STORM" }));
        jComboBox_SelFileFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_SelFileFormatActionPerformed(evt);
            }
        });

        jTextField_ConvertFilePath.setToolTipText("channnel_1 localization csv files in a folder, no other csv files");
        jTextField_ConvertFilePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ConvertFilePathActionPerformed(evt);
            }
        });

        jButton_LoadConvertFile.setText("Load file");
        jButton_LoadConvertFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LoadConvertFileActionPerformed(evt);
            }
        });

        jButton_Convert.setText("Convert");
        jButton_Convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConvertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(34, 34, 34)
                                .addComponent(jComboBox_SelFileFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jTextField_ConvertFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton_LoadConvertFile, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jButton_Convert, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jComboBox_SelFileFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_ConvertFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_LoadConvertFile, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jButton_Convert, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(376, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Format conversion", jPanel8);

        jPanel4.setPreferredSize(new java.awt.Dimension(569, 533));

        jLabel28.setText("Channel 2:");

        jLabel29.setText("Channel 1:");

        jButton_LoadDataChan2.setText("Load Channel_2 localization file");
        jButton_LoadDataChan2.setToolTipText("targer localization csv file");
        jButton_LoadDataChan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LoadDataChan2ActionPerformed(evt);
            }
        });

        jButton_LoadDataChan1.setText("Load Channel_1 localization file");
        jButton_LoadDataChan1.setToolTipText("targer localization csv file");
        jButton_LoadDataChan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LoadDataChan1ActionPerformed(evt);
            }
        });

        jButton_LoadImage.setText("Load Image");
        jButton_LoadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LoadImageActionPerformed(evt);
            }
        });

        jButton_SelectROI.setText("Select ROI");
        jButton_SelectROI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SelectROIActionPerformed(evt);
            }
        });

        jTextField_LocDataPathChan2.setToolTipText("channel_2 localization csv files in a folder, no other csv files");

        jTextField_LocDataPathChan1.setToolTipText("channel_1 localization csv files in a folder, no other csv files");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField_LocDataPathChan2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_LocDataPathChan1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton_LoadDataChan1)
                                    .addComponent(jButton_LoadDataChan2)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel28))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(40, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jButton_LoadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_SelectROI, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel29)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_LoadDataChan1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_LocDataPathChan1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel28)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_LoadDataChan2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_LocDataPathChan2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_LoadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_SelectROI, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(307, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Channel registration", jPanel4);

        jCheckBox_DriftCorrection.setText("Drift correction by cross correlation");
        jCheckBox_DriftCorrection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_DriftCorrectionActionPerformed(evt);
            }
        });

        jLabel22.setText("Drift corr group frame number:");

        jTextField_DriftCorrGroupFrameNum.setText("500");
        jTextField_DriftCorrGroupFrameNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_DriftCorrGroupFrameNumActionPerformed(evt);
            }
        });

        jCheckBox_DriftCorrCh1.setText("Channel 1");
        jCheckBox_DriftCorrCh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_DriftCorrCh1ActionPerformed(evt);
            }
        });

        jCheckBox_DriftCorrCh2.setText("Channel 2");

        jCheckBox_DriftSave.setText("Save results");
        jCheckBox_DriftSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_DriftSaveActionPerformed(evt);
            }
        });

        jButton_DriftCorr.setText("DriftCorr");
        jButton_DriftCorr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DriftCorrActionPerformed(evt);
            }
        });

        jCheckBox_DriftCorrGPU.setText("GPU");
        jCheckBox_DriftCorrGPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_DriftCorrGPUActionPerformed(evt);
            }
        });

        jLabel31.setText("Raw image pixel size(nm): ");

        jTextField_RawImPixSize.setText("100");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox_DriftCorrection)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jCheckBox_DriftCorrCh1)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 152, Short.MAX_VALUE)
                                        .addComponent(jCheckBox_DriftCorrCh2))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField_RawImPixSize, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_DriftCorrGroupFrameNum, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox_DriftCorrGPU))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox_DriftSave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jButton_DriftCorr, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(110, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_DriftCorrection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jTextField_RawImPixSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_DriftCorrGroupFrameNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox_DriftCorrCh1)
                    .addComponent(jCheckBox_DriftCorrCh2))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_DriftCorrGPU)
                .addGap(10, 10, 10)
                .addComponent(jCheckBox_DriftSave)
                .addGap(18, 18, 18)
                .addComponent(jButton_DriftCorr, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(228, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Drift correction", jPanel1);

        jCheckBox_UnpFilt.setText("Remove imprecise localization");
        jCheckBox_UnpFilt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_UnpFiltActionPerformed(evt);
            }
        });

        jLabel34.setText("Imprecision  threshold:");

        jTextField_UnpThre.setText("20");
        jTextField_UnpThre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_UnpThreActionPerformed(evt);
            }
        });

        jCheckBox_DenFilt.setText("Remove isolated localization");
        jCheckBox_DenFilt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_DenFiltActionPerformed(evt);
            }
        });

        jLabel27.setText("MinPts:");

        jTextField_StDev.setText("5");
        jTextField_StDev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_StDevActionPerformed(evt);
            }
        });

        jLabel32.setText("Radius[nm]:");

        jTextField_DistThre.setText("30");
        jTextField_DistThre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_DistThreActionPerformed(evt);
            }
        });

        jCheckBox_RemoveDup.setText("Remove repeated localization in the same frame");

        jLabel33.setText("Distance threshold[nm]:");

        jTextField_FilterRadius.setText("10");

        jCheckBox_Merge.setText("Merge repeated localization of the same fluorophore");

        jLabel35.setText("Max frames (off) between localizations[frames]:");

        jLabel36.setText("Max distance between localizations[nm]:");

        jTextField_MaxFrameInterval.setText("1");
        jTextField_MaxFrameInterval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_MaxFrameIntervalActionPerformed(evt);
            }
        });

        jTextField_TwoEventsMaxDis.setText("10");

        jCheckBox_FilterChannel1.setText("Channel 1");
        jCheckBox_FilterChannel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_FilterChannel1ActionPerformed(evt);
            }
        });

        jCheckBox_FilterChannel2.setText("Channel 2");
        jCheckBox_FilterChannel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_FilterChannel2ActionPerformed(evt);
            }
        });

        jCheckBox_FilteringSave.setText("Save results");

        jButton_Filtering.setText("Filtering");
        jButton_Filtering.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FilteringActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jCheckBox_FilterChannel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(jCheckBox_FilterChannel2)
                .addGap(117, 117, 117))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jCheckBox_RemoveDup)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addGap(63, 63, 63)
                                .addComponent(jTextField_UnpThre, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCheckBox_UnpFilt)
                            .addComponent(jCheckBox_FilteringSave)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addGap(56, 56, 56)
                                .addComponent(jTextField_FilterRadius, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_StDev, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Filtering, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_DistThre, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(207, 207, 207))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jCheckBox_Merge)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35)
                            .addComponent(jCheckBox_DenFilt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jTextField_MaxFrameInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jTextField_TwoEventsMaxDis, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_UnpFilt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_UnpThre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_RemoveDup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_FilterRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_Merge)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_MaxFrameInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_TwoEventsMaxDis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_DenFilt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_StDev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_DistThre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_FilterChannel1)
                    .addComponent(jCheckBox_FilterChannel2))
                .addGap(15, 15, 15)
                .addComponent(jCheckBox_FilteringSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_Filtering, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        jTabbedPane3.addTab("Localization filtering", jPanel6);

        jTabbedPane1.addTab("Artifact correction", jTabbedPane3);

        jCheckBox_RDF.setText("Radial Distribution Fuction");

        jCheckBox_RipleyH.setText("Rilpley's H");

        jLabel37.setText("Max analysis distance[nm]:");

        jTextField_MaxAnaDis.setText("500");
        jTextField_MaxAnaDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_MaxAnaDisActionPerformed(evt);
            }
        });

        jComboBox_SelChan1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Channel 1", "Channel 2" }));
        jComboBox_SelChan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_SelChan1ActionPerformed(evt);
            }
        });

        jComboBox_SelChan2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Channel 1", "Channel 2" }));
        jComboBox_SelChan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_SelChan2ActionPerformed(evt);
            }
        });

        jButton_SpatialStatistics.setText("Statistics");
        jButton_SpatialStatistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SpatialStatisticsActionPerformed(evt);
            }
        });

        jCheckBox_LinkPostStatistic.setText("Link artifact correction ");
        jCheckBox_LinkPostStatistic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_LinkPostStatisticActionPerformed(evt);
            }
        });

        jCheckBox_SpatialStatiticSave.setText("Save results");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox_RipleyH)
                            .addComponent(jCheckBox_RDF)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel37)
                                .addGap(27, 27, 27)
                                .addComponent(jTextField_MaxAnaDis, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox_SpatialStatiticSave)
                            .addComponent(jCheckBox_LinkPostStatistic))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(jComboBox_SelChan1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addComponent(jComboBox_SelChan2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jButton_SpatialStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_RDF)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_RipleyH)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_MaxAnaDis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_SelChan1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_SelChan2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_LinkPostStatistic)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_SpatialStatiticSave)
                .addGap(18, 18, 18)
                .addComponent(jButton_SpatialStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Spatial distribution  statistics", jPanel3);

        jCheckBox_DBSCAN.setText("DBSCAN");

        jLabel38.setText("MinPts:");

        jTextField_MinPts.setText("5");

        jTextField_Eps.setText("100");
        jTextField_Eps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_EpsActionPerformed(evt);
            }
        });

        jCheckBox_Voronoi.setText("Voronoï tessellation");
        jCheckBox_Voronoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_VoronoiActionPerformed(evt);
            }
        });

        jCheckBox_ClusterChannel1.setText("Channel 1");

        jCheckBox_ClusterChannel2.setText("Channel 2");

        jButton_Cluster.setText("Cluster");
        jButton_Cluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ClusterActionPerformed(evt);
            }
        });

        jCheckBox_LinkPostCluster.setText("Link artifact correction ");
        jCheckBox_LinkPostCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_LinkPostClusterActionPerformed(evt);
            }
        });

        jCheckBox_SegmentationClusterSave.setText("Save results");

        jRadioButton_Eps.setText("Eps[nm]:");
        jRadioButton_Eps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_EpsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jButton_Cluster, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox_ClusterChannel1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox_Voronoi)
                        .addComponent(jCheckBox_DBSCAN)
                        .addComponent(jCheckBox_LinkPostCluster)
                        .addComponent(jCheckBox_SegmentationClusterSave)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addGap(49, 49, 49)
                                .addComponent(jTextField_MinPts, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jRadioButton_Eps)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField_Eps, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addComponent(jCheckBox_ClusterChannel2)
                .addGap(113, 113, 113))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_DBSCAN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_MinPts))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Eps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton_Eps))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_Voronoi)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_ClusterChannel2)
                    .addComponent(jCheckBox_ClusterChannel1))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_LinkPostCluster)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_SegmentationClusterSave)
                .addGap(18, 18, 18)
                .addComponent(jButton_Cluster, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );

        jTabbedPane2.addTab("Segmentation and cluster", jPanel2);

        jCheckBox_ClusDoc.setText("Coordinate-based colocalization ");
        jCheckBox_ClusDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_ClusDocActionPerformed(evt);
            }
        });

        jLabel41.setText("Max observed distance[nm]:");

        jLabel42.setText("Step:");

        jLabel43.setText("Colocalization Thresold:");

        jTextField_RMax.setText("500");
        jTextField_RMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_RMaxActionPerformed(evt);
            }
        });

        jTextField_Step.setText("10");

        jTextField_ColocThre.setText("0.4");

        jButton_CalcDOC.setText("Colocalization");
        jButton_CalcDOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CalcDOCActionPerformed(evt);
            }
        });

        jCheckBox_LinkPostColoc.setText("Link artifact correction ");
        jCheckBox_LinkPostColoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_LinkPostColocActionPerformed(evt);
            }
        });

        jCheckBox_ColocalizationSave.setText("Save results");
        jCheckBox_ColocalizationSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_ColocalizationSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox_ClusDoc)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel41)
                                    .addComponent(jLabel42)
                                    .addComponent(jLabel43)
                                    .addComponent(jCheckBox_LinkPostColoc)
                                    .addComponent(jCheckBox_ColocalizationSave))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_RMax, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(jTextField_Step)
                                    .addComponent(jTextField_ColocThre)))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jButton_CalcDOC, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(207, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_ClusDoc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_RMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_Step, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_ColocThre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_LinkPostColoc)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_ColocalizationSave)
                .addGap(18, 18, 18)
                .addComponent(jButton_CalcDOC, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(230, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Colocalization", jPanel5);

        jTabbedPane1.addTab("Analysis", jTabbedPane2);

        jButton_Rendering.setText("Rendering");
        jButton_Rendering.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RenderingActionPerformed(evt);
            }
        });

        jCheckBox_RenderCh2.setText("Channel 2");

        jCheckBox_RenderCh1.setText("Channel 1");

        jLabel24.setText("Rendering pixel size(nm): ");

        jTextField_RenderPixSize.setText("10");

        jCheckBox_RenderSave.setText("Save results");

        jCheckBox_ROI.setText("ROI");
        jCheckBox_ROI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_ROIActionPerformed(evt);
            }
        });

        jCheckBox_ArtifactCorrROI.setText("ROI link artifact correction ");
        jCheckBox_ArtifactCorrROI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_ArtifactCorrROIActionPerformed(evt);
            }
        });

        jLabel30.setText("Raw image pixel size(nm): ");

        jTextField_RawImPixSizeForRender.setText("100");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox_RenderSave)
                    .addComponent(jCheckBox_ROI)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox_ArtifactCorrROI)
                            .addComponent(jCheckBox_RenderCh1))
                        .addGap(129, 129, 129)
                        .addComponent(jCheckBox_RenderCh2))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jButton_Rendering, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel30))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_RenderPixSize, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(jTextField_RawImPixSizeForRender))))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jTextField_RawImPixSizeForRender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextField_RenderPixSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox_ROI)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_ArtifactCorrROI)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_RenderCh1)
                    .addComponent(jCheckBox_RenderCh2))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_RenderSave)
                .addGap(18, 18, 18)
                .addComponent(jButton_Rendering, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(257, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Visualization", jPanel7);

        jTextField_ResultPath.setText("D:\\");
            jTextField_ResultPath.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_ResultPathActionPerformed(evt);
                }
            });

            jButton_LoadResultPath.setText("Change results save path");
            jButton_LoadResultPath.setActionCommand("");
            jButton_LoadResultPath.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton_LoadResultPathActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jTextField_ResultPath, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(jButton_LoadResultPath, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 47, Short.MAX_VALUE)))
                    .addContainerGap(18, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton_LoadResultPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_ResultPath))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jButton_LoadResultPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadResultPathActionPerformed
        JFileChooser jf = new JFileChooser(lastpath);
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jf.showDialog(null, null);
        File fi = jf.getSelectedFile();
        ResultsFilePath = fi.getAbsolutePath();

        char EndMarkC = '\\';
        if (ResultsFilePath.charAt(ResultsFilePath.length() - 1) != EndMarkC) {
            ResultsFilePath += EndMarkC;
        }
        lastpath = ResultsFilePath;
        jTextField_ResultPath.setText(ResultsFilePath);
    }//GEN-LAST:event_jButton_LoadResultPathActionPerformed

    private void jTextField_ResultPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ResultPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ResultPathActionPerformed

    private void jButton_FilteringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FilteringActionPerformed

        GetFilteringPara();

        UnpFilterEnable = jCheckBox_UnpFilt.isSelected() ? 1 : 0;
        DenFiltEnable = jCheckBox_DenFilt.isSelected() ? 1 : 0;
        DupFiltEnable = jCheckBox_RemoveDup.isSelected() ? 1 : 0;
        MergeEnable = jCheckBox_Merge.isSelected() ? 1 : 0;
        FilterChan1Enable = jCheckBox_FilterChannel1.isSelected() ? 1 : 0;
        FilterChan2Enable = jCheckBox_FilterChannel2.isSelected() ? 1 : 0;
        FilteringSave = jCheckBox_FilteringSave.isSelected() ? 1 : 0;

        if (FilterChan1Enable == 1) {
            if (DataPathChan1 == null) {
                EnableFiltering();
                return;
            }

            if (DataPathChan1.length() < 2) {
                EnableFiltering();
                return;
            }

            if (!DataPathChan1.endsWith(".csv")) {
                EnableFiltering();
                return;
            }
        }
        if (FilterChan2Enable == 1) {
            if (DataPathChan2 == null) {
                EnableFiltering();
                return;
            }

            if (DataPathChan2.length() < 2) {
                EnableFiltering();
                return;
            }

            if (!DataPathChan2.endsWith(".csv")) {
                EnableFiltering();
                return;
            }
        }

        DisableFiltering();

        try {
            pDecodeSTORM.StartFiltering();

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton_FilteringActionPerformed

    private void jCheckBox_FilterChannel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_FilterChannel2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_FilterChannel2ActionPerformed

    private void jCheckBox_FilterChannel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_FilterChannel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_FilterChannel1ActionPerformed

    private void jTextField_MaxFrameIntervalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_MaxFrameIntervalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_MaxFrameIntervalActionPerformed

    private void jTextField_DistThreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_DistThreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_DistThreActionPerformed

    private void jTextField_StDevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_StDevActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_StDevActionPerformed

    private void jCheckBox_DenFiltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_DenFiltActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_DenFiltActionPerformed

    private void jTextField_UnpThreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_UnpThreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_UnpThreActionPerformed

    private void jCheckBox_UnpFiltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_UnpFiltActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_UnpFiltActionPerformed

    private void jButton_DriftCorrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DriftCorrActionPerformed
        DriftCorrEnable = jCheckBox_DriftCorrection.isSelected() ? 1 : 0;
        DriftCorrCh1Enable = jCheckBox_DriftCorrCh1.isSelected() ? 1 : 0;
        DriftCorrCh2Enable = jCheckBox_DriftCorrCh2.isSelected() ? 1 : 0;
        DriftCorrSave = jCheckBox_DriftSave.isSelected() ? 1 : 0;
        DriftCorrGPU = jCheckBox_DriftCorrGPU.isSelected() ? 1 : 0;
        DriftCorrGroupFrameNum = Integer.parseInt(jTextField_DriftCorrGroupFrameNum.getText());
        RawImPixSize =  Float.parseFloat(jTextField_RawImPixSizeForRender.getText());

        if (DriftCorrCh1Enable == 1) {
            if (DataPathChan1 == null) {
                EnableDriftCorr();
                return;
            }

            if (DataPathChan1.length() < 2) {
                EnableDriftCorr();
                return;
            }

            if (!DataPathChan1.endsWith(".csv")) {
                EnableDriftCorr();
                return;
            }
        }
        if (DriftCorrCh2Enable == 1) {
            if (DataPathChan2 == null) {
                EnableDriftCorr();
                return;
            }

            if (DataPathChan2.length() < 2) {
                EnableDriftCorr();
                return;
            }

            if (!DataPathChan2.endsWith(".csv")) {
                EnableDriftCorr();
                return;
            }
        }
        DisableDriftCorr();
        try {
            pDecodeSTORM.StartDriftCorr();

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton_DriftCorrActionPerformed

    private void jCheckBox_DriftSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_DriftSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_DriftSaveActionPerformed

    private void jCheckBox_DriftCorrCh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_DriftCorrCh1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_DriftCorrCh1ActionPerformed

    private void jTextField_DriftCorrGroupFrameNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_DriftCorrGroupFrameNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_DriftCorrGroupFrameNumActionPerformed

    private void jCheckBox_DriftCorrectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_DriftCorrectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_DriftCorrectionActionPerformed

    private void jButton_RenderingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RenderingActionPerformed
        RenderRoiEnable = jCheckBox_ROI.isSelected() ? 1 : 0;
        RenderArtifactCorrRoiEnable = jCheckBox_ArtifactCorrROI.isSelected() ? 1 : 0;
        RenderCh1Enable = jCheckBox_RenderCh1.isSelected() ? 1 : 0;
        RenderCh2Enable = jCheckBox_RenderCh2.isSelected() ? 1 : 0;
        RawImPixSizeForRender =  Float.parseFloat(jTextField_RawImPixSizeForRender.getText());
        RenderPixSize = Integer.parseInt(jTextField_RenderPixSize.getText());
        RenderSave = jCheckBox_RenderSave.isSelected() ? 1 : 0;
        if (RenderCh1Enable == 1) {
            if (DataPathChan1 == null) {
                EnableRendering();
                return;
            }

            if (DataPathChan1.length() < 2) {
                EnableRendering();
                return;
            }

            if (!DataPathChan1.endsWith(".csv")) {
                EnableRendering();
                return;
            }
        }
        if (RenderCh2Enable == 1) {
            if (DataPathChan2 == null) {
                EnableRendering();
                return;
            }

            if (DataPathChan2.length() < 2) {
                EnableRendering();
                return;
            }

            if (!DataPathChan2.endsWith(".csv")) {
                EnableRendering();
                return;
            }
        }
        DisableRendering();
        try {
            pDecodeSTORM.StartRendering();

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton_RenderingActionPerformed

    private void jCheckBox_ColocalizationSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_ColocalizationSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_ColocalizationSaveActionPerformed

    private void jCheckBox_LinkPostColocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_LinkPostColocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_LinkPostColocActionPerformed

    private void jButton_CalcDOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CalcDOCActionPerformed

        Rmax = Float.parseFloat(jTextField_RMax.getText());
        Step = Float.parseFloat(jTextField_Step.getText());
        ColoThres = Float.parseFloat(jTextField_ColocThre.getText());
        DocEnable = jCheckBox_ClusDoc.isSelected() ? 1 : 0;
        LinkPostColocEnable = jCheckBox_LinkPostColoc.isSelected() ? 1 : 0;
        ColocalizationSave = jCheckBox_ColocalizationSave.isSelected() ? 1 : 0;
        if (DataPathChan1 == null || DataPathChan2 == null) {
            EnableColocalization();
            return;
        }

        if (DataPathChan1.length() < 2 || DataPathChan2.length() < 2) {
            EnableColocalization();
            return;
        }

        if (!DataPathChan1.endsWith(".csv") || !DataPathChan2.endsWith(".csv")) {
            EnableColocalization();
            return;
        }

        if (DocEnable == 1) {
            DisableColocalization();
            try {
                pDecodeSTORM.StartColocalization();
            } catch (Exception ex) {
            }

        }
    }//GEN-LAST:event_jButton_CalcDOCActionPerformed

    private void jTextField_RMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_RMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_RMaxActionPerformed

    private void jCheckBox_ClusDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_ClusDocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_ClusDocActionPerformed

    private void jRadioButton_EpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_EpsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_EpsActionPerformed

    private void jCheckBox_LinkPostClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_LinkPostClusterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_LinkPostClusterActionPerformed

    private void jButton_ClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ClusterActionPerformed

        DBSCANEnable = jCheckBox_DBSCAN.isSelected() ? 1 : 0;
        EpsEnable = jRadioButton_Eps.isSelected() ? 1 : 0;
        VoronoiEnable = jCheckBox_Voronoi.isSelected() ? 1 : 0;
        ClusterChan1Enable = jCheckBox_ClusterChannel1.isSelected() ? 1 : 0;
        ClusterChan2Enable = jCheckBox_ClusterChannel2.isSelected() ? 1 : 0;
        LinkPostClusterEnable = jCheckBox_LinkPostCluster.isSelected() ? 1 : 0;
        SegmentationClusterSave = jCheckBox_SegmentationClusterSave.isSelected() ? 1 : 0;
        MinPts = Integer.parseInt(jTextField_MinPts.getText());
        Eps = Float.parseFloat(jTextField_Eps.getText());

        if (ClusterChan1Enable == 1) {
            if (DataPathChan1 == null) {
                EnableFiltering();
                return;
            }

            if (DataPathChan1.length() < 2) {
                EnableFiltering();
                return;
            }

            if (!DataPathChan1.endsWith(".csv")) {
                EnableFiltering();
                return;
            }
        }
        if (ClusterChan2Enable == 1) {
            if (DataPathChan2 == null) {
                EnableFiltering();
                return;
            }

            if (DataPathChan2.length() < 2) {
                EnableFiltering();
                return;
            }

            if (!DataPathChan2.endsWith(".csv")) {
                EnableFiltering();
                return;
            }
        }
        DisableCluster();

        try {
            pDecodeSTORM.StartCluster();

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton_ClusterActionPerformed

    private void jCheckBox_VoronoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_VoronoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_VoronoiActionPerformed

    private void jTextField_EpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_EpsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_EpsActionPerformed

    private void jCheckBox_LinkPostStatisticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_LinkPostStatisticActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_LinkPostStatisticActionPerformed

    private void jButton_SpatialStatisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SpatialStatisticsActionPerformed

        RdfEnable = jCheckBox_RDF.isSelected() ? 1 : 0;
        RipleyHEnable = jCheckBox_RipleyH.isSelected() ? 1 : 0;
        LinkPostStatisticEnable = jCheckBox_LinkPostStatistic.isSelected() ? 1 : 0;
        SpatialStatiticSave = jCheckBox_SpatialStatiticSave.isSelected() ? 1 : 0;
        ChanSele_1 = jComboBox_SelChan1.getSelectedIndex();
        ChanSele_2 = jComboBox_SelChan2.getSelectedIndex();
        MaxAnaDis = Float.parseFloat(jTextField_MaxAnaDis.getText());
     

        if (ChanSele_1 == 0 && ChanSele_2 == 0) {
            if (DataPathChan1 == null) {
                EnableSpatialStatistics();
                return;
            }

            if (DataPathChan1.length() < 2) {
                EnableSpatialStatistics();
                return;
            }

            if (!DataPathChan1.endsWith(".csv")) {
                EnableSpatialStatistics();
                return;
            }
        } else if (ChanSele_1 == 1 && ChanSele_2 == 1) {
            if (DataPathChan2 == null) {
                EnableSpatialStatistics();
                return;
            }

            if (DataPathChan2.length() < 2) {
                EnableSpatialStatistics();
                return;
            }

            if (!DataPathChan2.endsWith(".csv")) {
                EnableSpatialStatistics();
                return;
            }
        } else {
            if (DataPathChan1 == null || DataPathChan2 == null) {
                EnableSpatialStatistics();
                return;
            }

            if (DataPathChan1.length() < 2 || DataPathChan2.length() < 2) {
                EnableSpatialStatistics();
                return;
            }

            if (!DataPathChan1.endsWith(".csv") || !DataPathChan2.endsWith(".csv")) {
                EnableSpatialStatistics();
                return;
            }

        }

        DisableSpatialStatistics();
        try {
            pDecodeSTORM.StartSpatialStatistics();

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton_SpatialStatisticsActionPerformed

    private void jComboBox_SelChan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_SelChan2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_SelChan2ActionPerformed

    private void jComboBox_SelChan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_SelChan1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_SelChan1ActionPerformed

    private void jTextField_MaxAnaDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_MaxAnaDisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_MaxAnaDisActionPerformed

    private void jButton_SelectROIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SelectROIActionPerformed

        DisableSelectROI();
        try {
            pDecodeSTORM.StartSelectROI();
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton_SelectROIActionPerformed

    private void jButton_LoadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadImageActionPerformed
        RawImPixSize =  Float.parseFloat(jTextField_RawImPixSizeForRender.getText());
        DisableScatter();
        try {
            pDecodeSTORM.StartScatter();

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton_LoadImageActionPerformed

    private void jButton_LoadDataChan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadDataChan1ActionPerformed
        OpenDialog dlgDialog = new OpenDialog("open channel_1 localization file");

        String filePath1 = dlgDialog.getPath();
        jTextField_LocDataPathChan1.setText(filePath1);
        DataPathChan1 = filePath1;
        if (DataPathChan1 == null) {
            return;
        }

        if (DataPathChan1.length() < 2) {
            return;
        }

        if (!DataPathChan1.endsWith(".csv")) {
            return;
        }

        DecodeSTORM_.lm_GetInLoc1(DataPathChan1);
    }//GEN-LAST:event_jButton_LoadDataChan1ActionPerformed

    private void jButton_LoadDataChan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadDataChan2ActionPerformed

        OpenDialog dlgDialog = new OpenDialog("open channel_2 localization file");

        String filePath = dlgDialog.getPath();
        jTextField_LocDataPathChan2.setText(filePath);
        DataPathChan2 = filePath;
        if (DataPathChan2 == null) {
            return;
        }

        if (DataPathChan2.length() < 2) {
            return;
        }

        if (!DataPathChan2.endsWith(".csv")) {
            return;
        }
        DecodeSTORM_.lm_GetInLoc2(DataPathChan2);
    }//GEN-LAST:event_jButton_LoadDataChan2ActionPerformed

    private void jButton_ConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ConvertActionPerformed

        if (ConvertFilePath == null) {
            EnableConvert();
        }

        if (ConvertFilePath.length() < 2) {
            EnableConvert();
        }
        DisableConvert();

        FileFormatSelect = jComboBox_SelFileFormat.getSelectedIndex();

        try {
            pDecodeSTORM.StartConvert();

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton_ConvertActionPerformed

    private void jButton_LoadConvertFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadConvertFileActionPerformed
        OpenDialog dlgDialog = new OpenDialog("open convert file");

        String filePath1 = dlgDialog.getPath();
        jTextField_ConvertFilePath.setText(filePath1);
        ConvertFilePath = filePath1;
        if (ConvertFilePath == null) {
            return;
        }

        if (ConvertFilePath.length() < 2) {
            return;
        }
    }//GEN-LAST:event_jButton_LoadConvertFileActionPerformed

    private void jTextField_ConvertFilePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ConvertFilePathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ConvertFilePathActionPerformed

    private void jComboBox_SelFileFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_SelFileFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_SelFileFormatActionPerformed

    private void jCheckBox_DriftCorrGPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_DriftCorrGPUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_DriftCorrGPUActionPerformed

    private void jCheckBox_ArtifactCorrROIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_ArtifactCorrROIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_ArtifactCorrROIActionPerformed

    private void jCheckBox_ROIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_ROIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_ROIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DecodeSTORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DecodeSTORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DecodeSTORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DecodeSTORM_Configurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DecodeSTORM_Configurator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_CalcDOC;
    private javax.swing.JButton jButton_Cluster;
    private javax.swing.JButton jButton_Convert;
    private javax.swing.JButton jButton_DriftCorr;
    private javax.swing.JButton jButton_Filtering;
    private javax.swing.JButton jButton_LoadConvertFile;
    private javax.swing.JButton jButton_LoadDataChan1;
    private javax.swing.JButton jButton_LoadDataChan2;
    private javax.swing.JButton jButton_LoadImage;
    private javax.swing.JButton jButton_LoadResultPath;
    private javax.swing.JButton jButton_Rendering;
    private javax.swing.JButton jButton_SelectROI;
    private javax.swing.JButton jButton_SpatialStatistics;
    private javax.swing.JCheckBox jCheckBox_ArtifactCorrROI;
    private javax.swing.JCheckBox jCheckBox_ClusDoc;
    private javax.swing.JCheckBox jCheckBox_ClusterChannel1;
    private javax.swing.JCheckBox jCheckBox_ClusterChannel2;
    private javax.swing.JCheckBox jCheckBox_ColocalizationSave;
    private javax.swing.JCheckBox jCheckBox_DBSCAN;
    private javax.swing.JCheckBox jCheckBox_DenFilt;
    private javax.swing.JCheckBox jCheckBox_DriftCorrCh1;
    private javax.swing.JCheckBox jCheckBox_DriftCorrCh2;
    private javax.swing.JCheckBox jCheckBox_DriftCorrGPU;
    private javax.swing.JCheckBox jCheckBox_DriftCorrection;
    private javax.swing.JCheckBox jCheckBox_DriftSave;
    private javax.swing.JCheckBox jCheckBox_FilterChannel1;
    private javax.swing.JCheckBox jCheckBox_FilterChannel2;
    private javax.swing.JCheckBox jCheckBox_FilteringSave;
    private javax.swing.JCheckBox jCheckBox_LinkPostCluster;
    private javax.swing.JCheckBox jCheckBox_LinkPostColoc;
    private javax.swing.JCheckBox jCheckBox_LinkPostStatistic;
    private javax.swing.JCheckBox jCheckBox_Merge;
    private javax.swing.JCheckBox jCheckBox_RDF;
    private javax.swing.JCheckBox jCheckBox_ROI;
    private javax.swing.JCheckBox jCheckBox_RemoveDup;
    private javax.swing.JCheckBox jCheckBox_RenderCh1;
    private javax.swing.JCheckBox jCheckBox_RenderCh2;
    private javax.swing.JCheckBox jCheckBox_RenderSave;
    private javax.swing.JCheckBox jCheckBox_RipleyH;
    private javax.swing.JCheckBox jCheckBox_SegmentationClusterSave;
    private javax.swing.JCheckBox jCheckBox_SpatialStatiticSave;
    private javax.swing.JCheckBox jCheckBox_UnpFilt;
    private javax.swing.JCheckBox jCheckBox_Voronoi;
    private javax.swing.JComboBox jComboBox_SelChan1;
    private javax.swing.JComboBox jComboBox_SelChan2;
    private javax.swing.JComboBox jComboBox_SelFileFormat;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton_Eps;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField jTextField_ColocThre;
    private javax.swing.JTextField jTextField_ConvertFilePath;
    private javax.swing.JTextField jTextField_DistThre;
    private javax.swing.JTextField jTextField_DriftCorrGroupFrameNum;
    private javax.swing.JTextField jTextField_Eps;
    private javax.swing.JTextField jTextField_FilterRadius;
    private javax.swing.JTextField jTextField_LocDataPathChan1;
    private javax.swing.JTextField jTextField_LocDataPathChan2;
    private javax.swing.JTextField jTextField_MaxAnaDis;
    private javax.swing.JTextField jTextField_MaxFrameInterval;
    private javax.swing.JTextField jTextField_MinPts;
    private javax.swing.JTextField jTextField_RMax;
    private javax.swing.JTextField jTextField_RawImPixSize;
    private javax.swing.JTextField jTextField_RawImPixSizeForRender;
    private javax.swing.JTextField jTextField_RenderPixSize;
    private javax.swing.JTextField jTextField_ResultPath;
    private javax.swing.JTextField jTextField_StDev;
    private javax.swing.JTextField jTextField_Step;
    private javax.swing.JTextField jTextField_TwoEventsMaxDis;
    private javax.swing.JTextField jTextField_UnpThre;
    // End of variables declaration//GEN-END:variables

    public static class FilteringPara {

        float StDev = -1f;
        float distThre = 50;
        float RadThre = 20;
        float UnprecThres = 20;
        float MaxOffFrame = 1;
        float MaxDis = 5;
    }

    public FilteringPara GetFilteringPara() {
        FiltPara.StDev = Float.parseFloat(jTextField_StDev.getText());
        FiltPara.distThre = Float.parseFloat(jTextField_DistThre.getText());
        FiltPara.RadThre = Float.parseFloat(jTextField_FilterRadius.getText());
        FiltPara.UnprecThres = Float.parseFloat(jTextField_UnpThre.getText());
        FiltPara.MaxOffFrame = Float.parseFloat(jTextField_MaxFrameInterval.getText());
        FiltPara.MaxDis = Float.parseFloat(jTextField_TwoEventsMaxDis.getText());

        return FiltPara;


    }

    public void EnableConvert() {
        jButton_Convert.setEnabled(true);
    }

    public void DisableConvert() {
        jButton_Convert.setEnabled(false);
    }

    public void EnableScatter() {
        jButton_LoadImage.setEnabled(true);
    }

    public void DisableScatter() {
        jButton_LoadImage.setEnabled(false);
    }

    public void EnableSelectROI() {
        jButton_SelectROI.setEnabled(true);
    }

    public void DisableSelectROI() {
        jButton_SelectROI.setEnabled(false);
    }
    
    public void EnableRendering() {
        jButton_Rendering.setEnabled(true);
    }

    public void DisableRendering() {
        jButton_Rendering.setEnabled(false);
    }

    public void EnableDriftCorr() {
        jButton_DriftCorr.setEnabled(true);
    }

    public void DisableDriftCorr() {
        jButton_DriftCorr.setEnabled(false);
    }

    public void EnableFiltering() {
        jButton_Filtering.setEnabled(true);
    }

    public void DisableFiltering() {
        jButton_Filtering.setEnabled(false);
    }

    public void EnableSpatialStatistics() {
        jButton_SpatialStatistics.setEnabled(true);
    }

    public void DisableSpatialStatistics() {
        jButton_SpatialStatistics.setEnabled(false);
    }

    public void EnableCluster() {
        jButton_Cluster.setEnabled(true);
    }

    public void DisableCluster() {
        jButton_Cluster.setEnabled(false);
    }

    public void EnableColocalization() {
        jButton_CalcDOC.setEnabled(true);
    }

    public void DisableColocalization() {
        jButton_CalcDOC.setEnabled(false);
    }
}
